export default `"use strict";(()=>{var T="realtime-bpm-processor";async function p(n,s=.2,e=.95,o=.05){let t=e;do if(t-=o,await n(t))break;while(t>s)}function y(n=.2,s=.95,e=.05){let o={},t=s;do t-=e,o[t.toString()]=[];while(t>n);return o}function A(n=.2,s=.95,e=.05){let o={},t=s;do t-=e,o[t.toString()]=0;while(t>n);return o}function m(){let s=0,e=new Float32Array(0);function o(){s=0,e=new Float32Array(0)}function t(){return s===4096}function a(){o()}return function(r){t()&&a();let l=new Float32Array(e.length+r.length);return l.set(e,0),l.set(r,e.length),e=l,s+=r.length,{isBufferFull:t(),buffer:e,bufferSize:4096}}}function v(n,s,e=0,o=1e4){let t=[],{length:a}=n;for(let r=e;r<a;r+=1)n[r]>s&&(t.push(r),r+=o);return{peaks:t,threshold:s}}async function b(n,s){let e=15,o=!1,t=.2;if(await p(async a=>o?!0:(n[a].length>e&&(o=!0,t=a),!1)),o&&t){let a=w(n[t]),r=S(s,a);return{bpm:V(r),threshold:t}}return{bpm:[],threshold:t}}function V(n,s=5){return n.sort((e,o)=>o.count-e.count).splice(0,s)}function w(n){let s=[];for(let e=0;e<n.length;e++)for(let o=0;o<10;o++){let t=n[e],a=e+o,r=n[a]-t;if(!s.some(i=>i.interval===r?(i.count+=1,i.count):!1)){let i={interval:r,count:1};s.push(i)}}return s}function S(n,s){let e=[];for(let o of s){if(o.interval===0)continue;o.interval=Math.abs(o.interval);let t=60/(o.interval/n);for(;t<90;)t*=2;for(;t>180;)t/=2;if(t=Math.round(t),!e.some(r=>r.tempo===t?(r.count+=o.count,r.count):!1)){let r={tempo:t,count:o.count,confidence:0};e.push(r)}}return e}var d={minValidThreshold:()=>.2,validPeaks:()=>y(),nextIndexPeaks:()=>A(),skipIndexes:()=>1,effectiveBufferTime:()=>0},f=class{constructor(s={}){this.options={continuousAnalysis:!1,stabilizationTime:2e4,muteTimeInIndexes:1e4,debug:!1};this.minValidThreshold=d.minValidThreshold();this.validPeaks=d.validPeaks();this.nextIndexPeaks=d.nextIndexPeaks();this.skipIndexes=d.skipIndexes();this.effectiveBufferTime=d.effectiveBufferTime();this.computedStabilizationTimeInSeconds=0;Object.assign(this.options,s),this.updateComputedValues()}updateComputedValues(){this.computedStabilizationTimeInSeconds=this.options.stabilizationTime/1e3}reset(){this.minValidThreshold=d.minValidThreshold(),this.validPeaks=d.validPeaks(),this.nextIndexPeaks=d.nextIndexPeaks(),this.skipIndexes=d.skipIndexes(),this.effectiveBufferTime=d.effectiveBufferTime()}async clearValidPeaks(s){this.minValidThreshold=Number.parseFloat(s.toFixed(2)),await p(async e=>(e<s&&this.validPeaks[e]!==void 0&&(delete this.validPeaks[e],delete this.nextIndexPeaks[e]),!1))}async analyzeChunck(s,e,o,t){this.options.debug&&t({message:"ANALYZE_CHUNK",data:s}),this.effectiveBufferTime+=o;let a=o*this.skipIndexes,r=a-o;await this.findPeaks(s,o,r,a,t),this.skipIndexes++;let l=await b(this.validPeaks,e),{threshold:i}=l;t({message:"BPM",data:l}),this.minValidThreshold<i&&(t({message:"BPM_STABLE",data:l}),await this.clearValidPeaks(i)),this.options.continuousAnalysis&&this.effectiveBufferTime/e>this.computedStabilizationTimeInSeconds&&(this.reset(),t({message:"ANALYZER_RESETED"}))}async findPeaks(s,e,o,t,a){await p(async r=>{if(this.nextIndexPeaks[r]>=t)return!1;let l=this.nextIndexPeaks[r]%e,{peaks:i,threshold:c}=v(s,r,l);if(i.length===0)return!1;for(let B of i){let h=o+B;this.nextIndexPeaks[c]=h+this.options.muteTimeInIndexes,this.validPeaks[c].push(h),this.options.debug&&a({message:"VALID_PEAK",data:{threshold:c,index:h}})}return!1},this.minValidThreshold)}};var x=class extends AudioWorkletProcessor{constructor(e){super(e);this.stopped=!1;this.aggregate=m(),this.realTimeBpmAnalyzer=new f(e.processorOptions),this.port.addEventListener("message",this.onMessage.bind(this)),this.port.start()}onMessage(e){e.data.message==="RESET"&&(console.log("[processor.onMessage] RESET"),this.aggregate=m(),this.stopped=!1,this.realTimeBpmAnalyzer.reset()),e.data.message==="STOP"&&(console.log("[processor.onMessage] STOP"),this.aggregate=m(),this.stopped=!0,this.realTimeBpmAnalyzer.reset())}process(e,o,t){let a=e[0][0];if(this.stopped||!a)return!0;let{isBufferFull:r,buffer:l,bufferSize:i}=this.aggregate(a);return r&&this.realTimeBpmAnalyzer.analyzeChunck(l,sampleRate,i,c=>{this.port.postMessage(c)}).catch(c=>{console.error(c)}),!0}};registerProcessor(T,x);var _={};})();
//# sourceMappingURL=realtime-bpm-processor.js.map
`;
